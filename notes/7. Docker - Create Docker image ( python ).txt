
---------------------------------------------------------
https://github.com/VijayPatil1602/devops-master-class
-------------------------------------------------------

check the projets folder in 

	/devops-master-class-master/projets/
		there are java, nodejs, python simple projets


cmd --> in cmd or terminal , select project folder then hit to build image

	* docker build -t ( tag ) in28min/hello-world-python:0.0.2.RELEASE . (Current folder)
        * docker build -t in28min/hello-world-python:0.0.2.RELEASE .
        * docker run -p 5000:5000 -d in28min/hello-world-python:0.0.2.RELEASE
        * docker logs -f (id of the container)


**** push the build image to docker hub

	* docker push in28min(docker id)/hello-world-python(project name):0.0.2.RELEASE
	* docker push in28min/hello-world-python:0.0.2.RELEASE


------------------------for python------------------------------


# this is the base image
FROM python:alpine3.10  //// now here we want to start with a image which already 
			   contains python in it, and we are using python 3 here.
			   this alpine in here is a specific version of Linux which
			   is really really good to use with docker images. this is not
			   the complete version of linux, This is a toned down version
			   of linux which is very very small in size, and which can be
			   used to build your Docker image.


# working directory for specific application
WORKDIR /app    ////  this is the working directory. which going to be created by 
		      docker



# for copying the code
COPY . /app     ////  this line copy the code to working directory(app). and in this case
		      code is available in same folder to we add ( . ) here.
		      this means like copy all the files form the current directory,
		      from the . directory, to the /app folder



# to run this application we need this line
requirements.txt => contains (  flask  )
RUN pip install -r requirements.txt    /////  we would need to download and install
					      Flask, and the most popular tool to 
					      manage dependencies in python is ( pip )
					      if you are familier with NodeJs then this
					      is npm.
					      And if you are familiar with Java, then
					      its very similar to maven and docker.
					      so we are using pip to download the flask
					      framework, and to run this command.
   


EXPOSE 5000        ////  we want expose the port 4000. As we looked at earlier i launch
			 that by we are exposing on port 5000 to the outside word.



CMD python ./launch.py    ///// here we would want to launch up the launch.py
				so all that we're doing is saying run python
				./launch.py.

#COPY requirements.txt /app/requirements.txt
#ENTRYPOINT ["python", "./launch.py"]

---------------------------------------------------------------


















